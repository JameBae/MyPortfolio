-- Table 1 Foods
CREATE TABLE foods (
  food_id int,
  food_name TEXT,
  food_price real
);
INSERT INTO foods VALUES
  (1, "Salad", 50),
  (2, "Hotdog", 60),
  (3, "Hamburger", 70),
  (4, "Pizza", 80),
  (5, "Padthai", 40),
  (6, "Fried rice", 50),
  (7, "Nacho chip", 35),
  (8, "Sausage", 30),
  (9, "Spaghetti", 110),
  (10, "Beef Wellington", 550)
;
------

-- Table 2 Drinks
CREATE TABLE drinks(
  drink_id int,
  drink_name TEXT,
  drink_price real
);
INSERT INTO drinks VALUES
  (1, "Water", 15),
  (2, "Coke", 20),
  (3, "Leo", 105),
  (4, "Vodka", 300),
  (5, "Rum", 290),
  (6, "Mocktail", 250),
  (7, "Fruit Frappe", 150),
  (8, "Sprite", 20),
  (9, "Fanta", 20),
  (10, "Oishi", 30);
--------

-- Table 3 customers
CREATE TABLE customers (
  customer_id int,
  customer_name TEXT,
  customer_phone int,
  customer_gender TEXT
);

INSERT INTO customers VALUES
  (1, "Jane", 0838003694, "F"),
  (2, "Joy", 0973504790, "F"),
  (3, "Few", 0820028322, "M"),
  (4, "Terry", 0979109128, "M"),
  (5, "Emmy", 0975598235, "F"),
  (6, "Riggy", 0929986784, "F"),
  (7, "Woody", 0814183719, "M"),
  (8, "Elly", 0980571231, "F"),
  (9, "Figgy", 0973185536, "F"),
  (10, "Yew", 0820533488, "M"),
  (11, "Mick", 0884462732, "M"),
  (12, "Sylvia", 0806961267, "F"),
  (13, "Igg", 0894565134, "F"),
  (14, "Big", 0994531206, "M"),
  (15, "Dewa", 0840465897, "M"),
  (16, "Ocha", 0979951149, "M"),
  (17, "Perry", 0923101853, "F"),
  (18, "Meaw", 0878715957, "F"),
  (19, "Kook", 0828944981, "M"),
  (20, "Amanda", 0927009488, "F");

-- Table 4 payments
CREATE TABLE payments (
  payment_id int,
  payment_name TEXT
);

INSERT INTO payments VALUES
  (1, "Cash"),
  (2, "QR Code"),
  (3, "Credit Card"),
  (4, "Couple");

-----

-- Table 5 orders
CREATE TABLE orders (
  order_id int,
  order_date date,
  customer_id int,
  food_id int,
  drink_id int,
  payment_id int
);

INSERT INTO orders VALUES
  (1, 20230523, 1, 3, 3, 4),
  (2, 20230523, 1, 4, 2, 2),
  (3, 20230523, 2, 5, 2, 2),
  (4, 20230523, 15, 10, 3, 4),
  (5, 20230523, 14, 1, 1, 1),
  (6, 20230523, 9, 7, 4, 3),
  (7, 20230523, 10, 10, 2, 3),
  (8, 20230524, 4, 8, 2, 2),
  (9, 20230524, 3, 7, 3, 1),
  (10, 20230524, 4, 3, 3, 3),
  (11, 20230524, 6, 4, 1, 4),
  (12, 20230524, 12, 5, 7, 2),
  (13, 20230524, 19, 3, 4, 1),
  (14, 20230524, 18, 3, 1, 4),
  (15, 20230524, 13, 2, 9, 2),
  (16, 20230524, 16, 5, 6, 1),
  (17, 20230524, 9, 8, 1, 4),
  (18, 20230524, 11, 5, 9, 2),
  (19, 20230524, 12, 6, 7, 3),
  (20, 20230524, 3, 5, 6, 1),
  (21, 20230525, 17, 5, 2, 3),
  (22, 20230525, 19, 2, 3, 2),
  (23, 20230525, 14, 7, 6, 4),
  (24, 20230525, 9, 1, 10, 2),
  (25, 20230525, 20, 3, 7, 3),
  (26, 20230525, 17, 4, 9, 1),
  (27, 20230525, 14, 7, 8, 4),
  (28, 20230525, 4, 6, 5, 2),
  (29, 20230525, 5, 5, 4, 3),
  (30, 20230525, 16, 10, 10, 4);
---
select * from foods;
select * from drinks;
select * from customers;
select * from payments;
select * from orders;

------
-- Top 5 of food

SELECT food_name, COUNT(*) AS no_foods
FROM foods AS f
JOIN orders AS o ON f.food_id = o.food_id
GROUP BY food_name
ORDER BY no_foods DESC
LIMIT 5;

----
---- All price and Avg price per customers

WITH price_all AS (
	SELECT * FROM orders AS o
	JOIN foods AS f ON o.food_id = f.food_id
	JOIN drinks AS d ON o.drink_id = d.drink_id
	JOIN customers AS c ON o.customer_id = c.customer_id
)

SELECT
	customer_name AS CusName,
	SUM(food_price) AS FoodPrice,
    SUM(drink_price) AS DrinkPrice,
    SUM(food_price + drink_price) AS AllPrice,
    ROUND(AVG(food_price + drink_price),2) AS AvgPrice 
FROM price_all
GROUP BY customer_name;

-----

--- How many new customer before date 20230523 and classified type of customer (20230523 is OldCustomer, before 20230523 is NewCustomer
SELECT "Type of Customer", "No_customer" FROM (
	SELECT order_date, COUNT(*) as No_Customer, Case when order_date > '20230523' THEN "New Customer"
    	ELSE "Old Customer"
        END AS "Type of Customer" FROM orders
	JOIN customers ON orders.customer_id = customers.customer_id
	WHERE order_date >= '20230523'
	GROUP by order_date);
